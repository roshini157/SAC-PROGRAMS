{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN6xGoIUFllEbKvpsi/WW1Y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"erR-GTz47vhO","executionInfo":{"status":"ok","timestamp":1750165254867,"user_tz":-330,"elapsed":679,"user":{"displayName":"Roshini G","userId":"10547154288944793042"}},"outputId":"33b2dc32-bb95-485a-8e87-b1266528168e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Original DataFrame:       Name  Age  Score Gender\n","0    Alice   25     88      F\n","1      Bob   30     90      M\n","2  Charlie   35     85      M\n","3    David   50     88      M\n","\n","After Removing Duplicates:       Name  Age  Score Gender\n","0    Alice   25     88      F\n","1      Bob   30     90      M\n","2  Charlie   35     85      M\n","3    David   50     88      M\n","\n","After Adding 'Pass'Column:       Name  Age  Score Gender  Pass\n","0    Alice   25     88      F  True\n","1      Bob   30     90      M  True\n","2  Charlie   35     85      M  True\n","3    David   50     88      M  True\n","\n","After Replacing Gender Values:       Name  Age  Score  Gender  Pass\n","0    Alice   25     88  Female  True\n","1      Bob   30     90    Male  True\n","2  Charlie   35     85    Male  True\n","3    David   50     88    Male  True\n","\n","After Renaming Index:           Name  Age  Score  Gender  Pass\n","ID001    Alice   25     88  Female  True\n","ID002      Bob   30     90    Male  True\n","2      Charlie   35     85    Male  True\n","3        David   50     88    Male  True\n","\n","After Binning 'Age' into Age_Group:           Name  Age  Score  Gender  Pass    Age_GRoup\n","ID001    Alice   25     88  Female  True        Young\n","ID002      Bob   30     90    Male  True  Middle-aged\n","2      Charlie   35     85    Male  True  Middle-aged\n","3        David   50     88    Male  True       Senior\n","\n","After Filtering Outliers in 'Score':\n","        Name  Age  Score  Gender  Pass    Age_GRoup\n","ID001  Alice   25     88  Female  True        Young\n","ID002    Bob   30     90    Male  True  Middle-aged\n","3      David   50     88    Male  True       Senior\n","\n","Shuffled DataFrame:           Name  Age  Score  Gender  Pass    Age_GRoup\n","3        David   50     88    Male  True       Senior\n","2      Charlie   35     85    Male  True  Middle-aged\n","ID001    Alice   25     88  Female  True        Young\n","\n","Random Sample of 3Rows:           Name  Age  Score  Gender  Pass    Age_GRoup\n","3        David   50     88    Male  True       Senior\n","2      Charlie   35     85    Male  True  Middle-aged\n","ID001    Alice   25     88  Female  True        Young\n","\n","After Computing Dummy Variables for 'Gender':           Name  Age  Score  Pass    Age_GRoup  Gender_Female  Gender_Male\n","ID001    Alice   25     88  True        Young           True        False\n","ID002      Bob   30     90  True  Middle-aged          False         True\n","2      Charlie   35     85  True  Middle-aged          False         True\n","3        David   50     88  True       Senior          False         True\n"]}],"source":["#33.Implement the data transformation in python using pandas\n","import pandas as pd\n","import numpy as np\n","data={\n","    'Name':['Alice','Bob','Charlie','David'],\n","    'Age':[25,30,35,50],\n","    'Score':[88,90,85,88],\n","    'Gender':['F','M','M','M']\n","}\n","df=pd.DataFrame(data)\n","print(\"Original DataFrame:\",df)\n","#1.Removing Duplicates\n","df=df.drop_duplicates()\n","print(\"\\nAfter Removing Duplicates:\",df)\n","#2.Adding a Column\n","df['Pass']=df['Score']>=75\n","print(\"\\nAfter Adding 'Pass'Column:\",df)\n","#3.Replacing Values\n","df['Gender']=df['Gender'].replace({'F':'Female','M':'Male'})\n","print(\"\\nAfter Replacing Gender Values:\",df)\n","#4.Renaming Axis/Index\n","df.rename(index={0:'ID001',1:'ID002'},inplace=True)\n","print(\"\\nAfter Renaming Index:\",df)\n","#5.Discretization/Binning Age\n","df['Age_GRoup']=pd.cut(df['Age'],bins=[0,25,35,50],labels=['Young','Middle-aged','Senior'])\n","print(\"\\nAfter Binning 'Age' into Age_Group:\",df)\n","#6.Detecting and Filtering Outliers in Score(IQR Method)\n","Q1=df['Score'].quantile(0.25)\n","Q3=df['Score'].quantile(0.75)\n","IQR=Q3-Q1\n","filtered_df=df[(df['Score']>=Q1-1.5*IQR)&(df['Score']<=Q3+1.5*IQR)]\n","print(\"\\nAfter Filtering Outliers in 'Score':\")\n","print(filtered_df)\n","#7.Permutation and Random sampling\n","shuffled_df=df.sample(n=3,random_state=1)\n","print(\"\\nShuffled DataFrame:\",shuffled_df)\n","print(\"\\nRandom Sample of 3Rows:\",shuffled_df)\n","#8.Computing Indicator/Dummy Variables\n","df_with_dummies=pd.get_dummies(df,columns=['Gender'])\n","print(\"\\nAfter Computing Dummy Variables for 'Gender':\",df_with_dummies)\n","\n"]}]}